/**
 * Kolay Asistan Medicine API
 * Kolay Asistan medicine application api layer. Revision Date: 04.12.2022
 *
 * The version of the OpenAPI document: v1
 * Contact: ahmetyagibasan@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FilterModel model module.
 * @module model/FilterModel
 * @version v1
 */
class FilterModel {
    /**
     * Constructs a new <code>FilterModel</code>.
     * @alias module:model/FilterModel
     * @param page {Number} Sayfa no
     * @param size {Number} Kayıt sayısı
     * @param sort {String} Sıralama
     * @param sortBy {String} Sıralama kolonu
     * @param queryText {String} Sorgu kriteri
     * @param searchBy {String} Sorgu kolonu
     */
    constructor(page, size, sort, sortBy, queryText, searchBy) { 
        
        FilterModel.initialize(this, page, size, sort, sortBy, queryText, searchBy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, page, size, sort, sortBy, queryText, searchBy) { 
        obj['page'] = page;
        obj['size'] = size;
        obj['sort'] = sort;
        obj['sortBy'] = sortBy;
        obj['queryText'] = queryText;
        obj['searchBy'] = searchBy;
    }

    /**
     * Constructs a <code>FilterModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterModel} obj Optional instance to populate.
     * @return {module:model/FilterModel} The populated <code>FilterModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterModel();

            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], 'String');
            }
            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], 'String');
            }
            if (data.hasOwnProperty('queryText')) {
                obj['queryText'] = ApiClient.convertToType(data['queryText'], 'String');
            }
            if (data.hasOwnProperty('searchBy')) {
                obj['searchBy'] = ApiClient.convertToType(data['searchBy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilterModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilterModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FilterModel.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sort'] && !(typeof data['sort'] === 'string' || data['sort'] instanceof String)) {
            throw new Error("Expected the field `sort` to be a primitive type in the JSON string but got " + data['sort']);
        }
        // ensure the json data is a string
        if (data['sortBy'] && !(typeof data['sortBy'] === 'string' || data['sortBy'] instanceof String)) {
            throw new Error("Expected the field `sortBy` to be a primitive type in the JSON string but got " + data['sortBy']);
        }
        // ensure the json data is a string
        if (data['queryText'] && !(typeof data['queryText'] === 'string' || data['queryText'] instanceof String)) {
            throw new Error("Expected the field `queryText` to be a primitive type in the JSON string but got " + data['queryText']);
        }
        // ensure the json data is a string
        if (data['searchBy'] && !(typeof data['searchBy'] === 'string' || data['searchBy'] instanceof String)) {
            throw new Error("Expected the field `searchBy` to be a primitive type in the JSON string but got " + data['searchBy']);
        }

        return true;
    }


}

FilterModel.RequiredProperties = ["page", "size", "sort", "sortBy", "queryText", "searchBy"];

/**
 * Sayfa no
 * @member {Number} page
 */
FilterModel.prototype['page'] = undefined;

/**
 * Kayıt sayısı
 * @member {Number} size
 */
FilterModel.prototype['size'] = undefined;

/**
 * Sıralama
 * @member {String} sort
 */
FilterModel.prototype['sort'] = undefined;

/**
 * Sıralama kolonu
 * @member {String} sortBy
 */
FilterModel.prototype['sortBy'] = undefined;

/**
 * Sorgu kriteri
 * @member {String} queryText
 */
FilterModel.prototype['queryText'] = undefined;

/**
 * Sorgu kolonu
 * @member {String} searchBy
 */
FilterModel.prototype['searchBy'] = undefined;






export default FilterModel;

